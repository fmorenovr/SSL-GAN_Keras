import matplotlib.pyplot as plt
import numpy as np

def normalize(x):
    x = (x.astype('float32') - 127.5) / 127.5
    return x

def unnormalize(x):
    x = 127.5*x+127.5
    return x
    
def plot_data(data, epoch, type_img, grid_size = [5, 5], OUT_PATH="", gray=False):
    # visualize some data generated by G
    size = grid_size[0] * grid_size[1]
    if data.shape[0] < size:
        size = 9
        grid_size=[3,3]
        data_concat = np.concatenate([data[:4], data[-5:]])
    else:
        data_concat = np.concatenate([data[:50], data[-50:]])
    # visualize some data generated by G
    _, axes = plt.subplots(figsize = grid_size, nrows = grid_size[0], ncols = grid_size[1],
                           sharey = True, sharex = True, gridspec_kw = {'wspace':0, 'hspace':0})

    for idx, ax in enumerate(axes.flatten()):
        ax.axis('off')
        if gray:
            ax.imshow(data_concat[idx], cmap = 'gray_r')
        else:
            ax.imshow(data_concat[idx])
    plt.tight_layout()
    plt.savefig(f"{OUT_PATH}{type_img}_{epoch}.png", bbox_inches='tight', pad_inches = 0.5)
    plt.clf()
    plt.cla()
    plt.close()
